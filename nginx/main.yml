---
  - hosts: web
    vars:
      upload_max_file_size: 2M

    tasks:
      - name: nginx | remove apache2
        apt: pkg={{ item }} purge=yes state=absent
        with_items:
          - apache2-mpm-prefork
          - apache2-utils
          - apache2.2-bin
          - apache2.2-common
          - libapache2-mod-php5
        tags:
          - nginx
          - apache2

      - name: nginx | install
        apt: pkg=nginx state=latest update_cache=yes
        tags: nginx

      - name: nginx | copy config file
        template: src=files/nginx.conf.j2 dest=/etc/nginx/conf.d/nginx.conf owner=root group=root mode=0644
        notify: reload nginx
        tags: nginx

      - name: nginx | update user
        lineinfile: dest=/etc/nginx/nginx.conf regexp="^user " line="user vagrant;" backup=yes
        when: vagrant is defined
        notify: reload nginx
        tags: nginx

      - name: nginx | configure
        lineinfile: dest=/etc/nginx/nginx.conf regexp="{{ item.regexp }}" line="{{ item.line }}" backup=yes
        with_items:
            - { regexp: "^worker_processes", line: "worker_processes auto;" }
            - { regexp: "server_tokens", line: "        server_tokens off;" }
        notify: reload nginx
        tags: nginx

      - name: nginx | disable default virtual host
        file: dest=/etc/nginx/sites-enabled/default state=absent
        notify: reload nginx
        tags: nginx

      - name: nginx | copy symfony2 config file
        copy: src=files/symfony2 dest=/etc/nginx/symfony2 owner=root group=root mode=0644
        notify: reload nginx
        tags: nginx

      - name: nginx | create /var/www directory
        file: dest=/var/www owner=www-data group=www-data state=directory
        tags: nginx

      - name: nginx | use bash for www-data
        command: chsh -s /bin/bash www-data
        tags: nginx

      - name: nginx | allow www-data to clear opcode
        lineinfile: "dest=/etc/sudoers state=present regexp='^www-data ALL=' line='www-data ALL= NOPASSWD: /etc/init.d/clear-opcode' validate='visudo -cf %s'"
        tags: nginx

      - name: nginx | ensure service is running
        service: name=nginx state=started
        tags: nginx

    handlers:
      - name: reload nginx
        service: name=nginx state=reloaded
